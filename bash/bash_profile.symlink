  #boo zsh
 export BASH_SILENCE_DEPRECATION_WARNING=1 

 #locale
 for file in ~/.bash_{alias,functions,vinnward,mt,gd}; do
    [ -r "$file" ] && [ -f "$file" ] && source "$file";
 done;

 #history
 export HISTFILESIZE=2000
 export HISTSIZE=2000

 export LANG=en_US.UTF-8
 export TERM=xterm-256color

 #export TERM="xterm"
 #export TERM="xterm"
 #export TERM="xterm"

 #colors
 export RESET='\e[0m'
 export BLACK='\e[0;30m'
 export RED='\e[0;31m'
 export GREEN='\e[0;32m'
 export YELLOW='\e[0;33m'
 export BLUE='\e[0;34m'
 export PURPLE='\e[0;35m'
 export CYAN='\e[0;36m'
 export WHITE='\e[0;37m'

 export LESS_TERMCAP_md=$(printf '\e[01;35m') # enter double-bright mode – bold, magenta
 export LESS_TERMCAP_me=$(printf '\e[0m') # turn off all appearance modes (mb, md, so, us)
 export LESS_TERMCAP_se=$(printf '\e[0m') # leave standout mode
 export LESS_TERMCAP_so=$(printf '\e[01;33m') # enter standout mode – yellow
 export LESS_TERMCAP_ue=$(printf '\e[0m') # leave underline mode
 export LESS_TERMCAP_us=$(printf '\e[04;36m') # enter underline mode – cyan
 
 #path
 export PATH="/usr/local/sbin:/usr/local/bin:$HOME/usr/local/opt/openssl/bin:$HOME/python/bin:$HOME/go/bin:$HOME/bin:/usr/local/opt/curl/bin:/usr/local/opt/avr-gcc@7/bin:$PATH"

 #editor
 export EDITOR="nvim"
 #lets try nvim for a while
 alias vim="nvim"


 #gpg
 export GPG_TTY=$(tty)

#environment
# if test ! $(command -v brew) && [ $(uname -s) = 'Darwin']; then
#    export PS_SYMBOL="$(echo -e '\xF0\x9F\x8D\x8E')";
##    export  PS_SYMBOL="🍏"
#    echo "Needs dotfiles and brew";
# elif [ $(uname -s) = 'Darwin' ]; then
#    export PS_SYMBOL="$(echo -e '\xF0\x9F\x8D\xBA\x3A')";
##   export PS_SYMBOL="🍺"
#    cat $HOME/.motd;
#    echo  $(hostname) ::: $( date '+%D %T') ::: |toilet -t -f term --gay;
#    #echo $( date '+%D %T') |toilet -t -f term -F border --gay;
#    eval "$(perl -I $HOME/perl5/lib/perl5 -Mlocal::lib)";
# fi
# 
# if [[ $(hostname -s) = 'omega' ]]; then
#    export PS_SYMBOL = '$PURPLE\xCE\xA9';
# fi

#manatee

#pureline bb
if [ $(uname -s) = 'Darwin' ] && test -d $HOME/github/pureline ; then
    cat $HOME/.motd
    source ~/github/pureline/pureline ~/.pureline.conf
    PL_TIME_SHOW_SECONDS=false
    PL_USER_SHOW_HOST=true
    PL_PATH_TRIM=1
elif [ $(uname -s) = 'Darwin' ] && test ! $(command -v brew); then
    export PS_SYMBOL="$(echo -e '\xf0\x9f\x8d\x8f')"; #apple symbol
   echo "Need dotfiles and brew"
elif [ $(uname -s) = 'Darwin' ] && test $(command -v brew); then
    export PS_SYMBOL="$(echo -e '\xF0\x9F\x8D\xBA\x3A')"; #beer symbol
fi

# export CLICOLOR="1" 
# export LSCOLORS="gxfxcxdxbxegedabagacad"
# export PS_POINTER="$"
# export PS1="\[$PURPLE\]\u\[$(tput sgr0)\] \[$CYAN\]\W\[$(tput sgr0)\] \[$WHITE\]}\]\[$(tput sgr0)\] "
# export PS1="\[$(tput bold)\]\[\033[38;5;219m\]\u${PS_SYMBOL}\[$(tput sgr0)\]:\[$(tput sgr0)\]\[$(tput bold)\]\[\033[38;5;149m\]\w\[$(tput sgr0)\] \[$(tput sgr0)\]"
# export PS1_DEBUG=false


 # tab completion check
 if which brew > /dev/null && [ -f "$(brew --prefix)/share/bash-completion/bash_completion" ]; then
    source "$(brew --prefix)/share/bash-completion/bash_completion";
 elif [ -f /etc/bash_completion ]; then
    source /etc/bash_completion;
 fi

 #ruby gem colorls
 #source $(dirname $(gem which colorls))/tab_complete.sh

 # tab completion g is git
 if type _git &> /dev/null && [ -f /usr/local/etc/bash_completion.d/git-completion.bash ]; then
    complete -o default -o nospace -F _git g;
 fi

 # tab completion for ssh hostnames
 [ -e "$HOME/.ssh/config" ] && complete -o "default" -o "nospace" -W "$(grep "^Host" ~/.ssh/config | grep -v "[?*]" | cut -d " " -f2- | tr ' ' '\n')" scp sftp ssh;

 # tab completion for common apps
 complete -o "nospace" -W "Contacts Calendar Dock Finder Mail Safari iTunes SystemUIServer Terminal Twitter" killall

 #ruby version manager
 [[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

export PATH="/usr/local/opt/e2fsprogs/bin:$PATH"
export PATH="/usr/local/opt/e2fsprogs/sbin:$PATH"

. "$HOME/.cargo/env"

# Setting PATH for Python 3.11
# The original version is saved in .bash_profile.pysave
PATH="/Library/Frameworks/Python.framework/Versions/3.11/bin:${PATH}"
export PATH
